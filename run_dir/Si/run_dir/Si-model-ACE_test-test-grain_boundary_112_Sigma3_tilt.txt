Model ACE_test, Test grain_boundary_112_Sigma3_tilt
Test run at 2020-08-05 01:12

model file: /Users/Cas/gits/testing-framework/run_dir/Si/run_dir/../models/ACE_test/model.py
============================================================
import pyjulip
import os
import glob

model_dir = os.path.dirname(os.path.realpath(__file__))
pot_name = glob.glob(os.path.join(model_dir,"*.json"))[0]

calculator = pyjulip.ACE(pot_name)

no_checkpoint = True

name = "ACE"
============================================================
test file: /Users/Cas/gits/testing-framework/scripts/../tests/Si/grain_boundary_112_Sigma3_tilt/test.py
============================================================
# This script defines a test case which computes one or more physical
# properties with a given model
#
# INPUTS:
#   model.calculator -- an ase.calculator.Calculator instance
#     this script can assume the calculator is checkpointed.
#
# OUTPUTS:
#   properties -- dictionary of key/value pairs corresponding
#     to physical quantities computed by this test

# standard ASE structure generation routines
from ase.lattice.cubic import Diamond
import numpy as np

import ase.io, sys, os

# set of utility routines specific this this model/testing framework
from utilities import relax_config

# the current model
import model

np.random.seed(75)

a0 = 5.44
fmax = 0.01 # maximum force following relaxtion [eV/A]

if not hasattr(model, 'bulk_reference'):
    # set up the a
    bulk = Diamond(symbol='Si', latticeconstant=a0)

    # specify that we will use model.calculator to compute forces, energies and stresses
    bulk.set_calculator(model.calculator)

    # use one of the routines from utilities module to relax the initial
    # unit cell and atomic positions
    bulk = relax_config(bulk, relax_pos=True, relax_cell=True, tol=fmax, traj_file=None)
else:
    bulk = model.bulk_reference.copy()
    bulk.set_calculator(model.bulk_reference.calc)

print("BOB doing bulk pot en")
e0 = bulk.get_potential_energy()/float(len(bulk))
print("got e0 ", e0)


def interface_energy(e0, filename):

    interface = ase.io.read(os.path.join(os.path.dirname(__file__),filename), format='extxyz')

    # adjust lattice constant
    interface.set_calculator(model.calculator)

    # relax atom positions, holding cell fixed
    interface.positions += 0.01*np.random.random_sample((len(interface),3))
    print("pre relax config")
    ase.io.write(sys.stdout, interface, format='extxyz')
    print("BOB doing gb relax")
    interface = relax_config(interface, relax_pos=True, relax_cell=True, tol=fmax, max_steps=300, traj_file=os.path.splitext(filename)[0]+"-relaxed.opt.xyz")
    print("post relax config")
    ase.io.write(sys.stdout, interface, format='extxyz')

    print("BOB doing gb get pot en")
    einterface  = interface.get_potential_energy()
    print('interface relaxed cell energy', einterface)
    e_form = (einterface-len(interface) * e0)
    area = np.linalg.norm(np.cross(interface.get_cell()[0,:],interface.get_cell()[1,:]))
    print("got area",area)
    print('interface relaxed formation energy/area', e_form/(2.0*area))
    return e_form/(2.0*area)

# dictionary of computed properties - this is output of this test, to
#   be compared with other models
properties = {'gb_energy': interface_energy(e0, "gb.0.25_0.0.xyz") }
============================================================
relax_config symmetry before refinement at default tol 1.0e-6
ase.spacegroup.symmetrize: prec 1e-06 got symmetry group number 227 , international (Hermann-Mauguin) Fd-3m , Hall  F 4d 2 3 -1d
/Users/Cas/miniconda3/lib/python3.8/site-packages/ase-3.20.0b1-py3.8.egg/ase/optimize/precon/lbfgs.py:132: UserWarning: The system is likely too small to benefit from the standard preconditioner, hence it is disabled. To re-enable preconditioning, call`PreconLBFGS` by explicitly providing the kwarg `precon`
  warnings.warn('The system is likely too small to benefit from ' +
PreconLBFGS:   0  01:14:44    -1305.396401       0.0000       0.0059
symmetry at end of relaxation at default tol 1e-6
ase.spacegroup.symmetrize: prec 1e-06 got symmetry group number 227 , international (Hermann-Mauguin) Fd-3m , Hall  F 4d 2 3 -1d
BOB doing bulk pot en
got e0  -163.17455011487957
Traceback (most recent call last):
  File "/Users/Cas/gits/testing-framework/scripts/run-model-test.py", line 129, in <module>
    import test  # import and run the current test
  File "/Users/Cas/gits/testing-framework/scripts/../tests/Si/grain_boundary_112_Sigma3_tilt/test.py", line 75, in <module>
    properties = {'gb_energy': interface_energy(e0, "gb.0.25_0.0.xyz") }
  File "/Users/Cas/gits/testing-framework/scripts/../tests/Si/grain_boundary_112_Sigma3_tilt/test.py", line 50, in interface_energy
    interface = ase.io.read(os.path.join(os.path.dirname(__file__),filename), format='extxyz')
  File "/Users/Cas/miniconda3/lib/python3.8/site-packages/ase-3.20.0b1-py3.8.egg/ase/io/formats.py", line 644, in read
    return next(_iread(filename, slice(index, None), format, io,
  File "/Users/Cas/miniconda3/lib/python3.8/site-packages/ase-3.20.0b1-py3.8.egg/ase/parallel.py", line 264, in new_generator
    for result in generator(*args, **kwargs):
  File "/Users/Cas/miniconda3/lib/python3.8/site-packages/ase-3.20.0b1-py3.8.egg/ase/io/formats.py", line 703, in _iread
    fd = open_with_compression(filename, mode)
  File "/Users/Cas/miniconda3/lib/python3.8/site-packages/ase-3.20.0b1-py3.8.egg/ase/io/formats.py", line 456, in open_with_compression
    return open(filename, mode)
FileNotFoundError: [Errno 2] No such file or directory: '/Users/Cas/gits/testing-framework/scripts/../tests/Si/grain_boundary_112_Sigma3_tilt/gb.0.25_0.0.xyz'
