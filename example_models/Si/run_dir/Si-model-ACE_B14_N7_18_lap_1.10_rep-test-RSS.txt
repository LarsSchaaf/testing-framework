Model ACE_B14_N7_18_lap_1.10_rep, Test RSS
Test run at 2020-08-06 23:09

model file: ../../models/ACE_B14_N7_18_lap_1.10_rep/model.py
============================================================
import pyjulip
import os
import glob

model_dir = os.path.dirname(os.path.realpath(__file__))
pot_name = glob.glob(os.path.join(model_dir,"*.json"))[0]

calculator = pyjulip.ACE(pot_name)

no_checkpoint = True

name = "ACE"
============================================================
test file: /Users/Cas/gits/testing-framework/scripts/../tests/Si/RSS/test.py
============================================================
import os.path
from RSS import do_RSS

properties = do_RSS(os.path.join(os.path.abspath(os.path.dirname(__file__)),'random_structs.extxyz'),':10:2')
============================================================
got index  :10:2 range_slice_args [None, 10, 2]
using i_config range(0, 5, 2)
relax_config symmetry before refinement at default tol 1.0e-6
ase.spacegroup.symmetrize: prec 1e-06 got symmetry group number 14 , international (Hermann-Mauguin) P2_1/c , Hall  -P 2ybc
relax_config trying to maintain symmetry
 SD2: i 0 E -2234.837431589492 f 22.270155780576033 s 137.90897818592867  alpha 0.0001 False
 SD2: i 1 E -2238.1920747905997 f 25.661649094822447 s 155.36821348070234  alpha 0.01 False
 SD2: i 2 E -2228.5973342267994 f 0.0 s 60.01214982026066  alpha 0.009258995596866737 False
SD2: i 3 bad lattice constant
symmetry at end of relaxation at default tol 1e-6
ase.spacegroup.symmetrize: prec 1e-06 got symmetry group number 14 , international (Hermann-Mauguin) P2_1/c , Hall  -P 2ybc
relax_config symmetry before refinement at default tol 1.0e-6
ase.spacegroup.symmetrize: prec 1e-06 got symmetry group number 14 , international (Hermann-Mauguin) P2_1/c , Hall  -P 2ybc
relax_config trying to maintain symmetry
/Users/Cas/miniconda3/lib/python3.8/site-packages/ase-3.20.0b1-py3.8.egg/ase/optimize/precon/lbfgs.py:132: UserWarning: The system is likely too small to benefit from the standard preconditioner, hence it is disabled. To re-enable preconditioning, call`PreconLBFGS` by explicitly providing the kwarg `precon`
  warnings.warn('The system is likely too small to benefit from ' +
PreconLBFGS:   0  23:12:53    -2228.597334       0.0000       0.0172
PreconLBFGS:   1  23:12:53    -2235.623398       0.0000       0.0069
symmetry at end of relaxation at default tol 1e-6
ase.spacegroup.symmetrize: prec 1e-06 got symmetry group number 14 , international (Hermann-Mauguin) P2_1/c , Hall  -P 2ybc
robust_minim relax_configs LBFGS finished in  2 iters, max 20
RSS completed minimization
relax_config symmetry before refinement at default tol 1.0e-6
ase.spacegroup.symmetrize: prec 1e-06 got symmetry group number 18 , international (Hermann-Mauguin) P2_12_12 , Hall  P 2 2ab
relax_config trying to maintain symmetry
 SD2: i 0 E -1276.8320135346466 f 20.997651562322446 s 79.79518030818711  alpha 0.0001 False
 SD2: i 1 E -1278.5725295854252 f 23.07173778747301 s 84.7078617449772  alpha 0.01 False
 SD2: i 2 E -1271.6227091830908 f 2.9788286644325503 s 12.710480102658952  alpha 0.008663584451919738 False
 SD2: i 3 E -1276.6878148591427 f 3.1764404831622604 s 18.337038019256788  alpha 0.01 False
 SD2: i 4 E -1284.5736878593968 f 0.4459498260792835 s 15.644861802037893  alpha 0.020187672074139542 False
 SD2: i 5 E -1296.9066237428467 f 0.745369540108277 s 13.28817171587515  alpha 0.07089263366630648 False
/Users/Cas/miniconda3/lib/python3.8/site-packages/scipy/sparse/linalg/matfuncs.py:716: LinAlgWarning: Ill-conditioned matrix (rcond=6.53212e-17): result may not be accurate.
  return solve(Q, P)
 SD2: i 6 E -63266161.69492979 f 4643141.007336644 s 449055620.56711465  alpha 0.01 False
Traceback (most recent call last):
  File "../../../scripts/run-model-test.py", line 129, in <module>
    import test  # import and run the current test
  File "/Users/Cas/gits/testing-framework/scripts/../tests/Si/RSS/test.py", line 4, in <module>
    properties = do_RSS(os.path.join(os.path.abspath(os.path.dirname(__file__)),'random_structs.extxyz'),':10:2')
  File "/Users/Cas/gits/testing-framework/scripts/../share/RSS.py", line 16, in do_RSS
    robust_minim_cell_pos(at, tol, "RSS_%04d" % i_config)
  File "/Users/Cas/gits/testing-framework/scripts/../share/utilities.py", line 312, in robust_minim_cell_pos
    relax_config(atoms, relax_pos=True, relax_cell=True, tol=sd2_tol, max_steps=max_sd2_iter,
  File "/Users/Cas/gits/testing-framework/scripts/../share/utilities.py", line 184, in relax_config
    (traj, run_stat) = sd2_run("", atoms_cell, tol, lambda i : sd2_converged(i, atoms_cell, tol), max_steps)
  File "/Users/Cas/gits/testing-framework/scripts/../share/utilities.py", line 79, in sd2_run
    grad_f = - config_minim.get_forces()
  File "/Users/Cas/miniconda3/lib/python3.8/site-packages/ase-3.20.0b1-py3.8.egg/ase/constraints.py", line 2632, in get_forces
    forces = UnitCellFilter.get_forces(self, **kwargs)
  File "/Users/Cas/miniconda3/lib/python3.8/site-packages/ase-3.20.0b1-py3.8.egg/ase/constraints.py", line 2452, in get_forces
    stress = self.atoms.get_stress(**kwargs)
  File "/Users/Cas/miniconda3/lib/python3.8/site-packages/ase-3.20.0b1-py3.8.egg/ase/atoms.py", line 826, in get_stress
    stress = self._calc.get_stress(self)
  File "/Users/Cas/miniconda3/lib/python3.8/site-packages/ase-3.20.0b1-py3.8.egg/ase/calculators/calculator.py", line 702, in get_stress
    return self.get_property('stress', atoms)
  File "/Users/Cas/miniconda3/lib/python3.8/site-packages/ase-3.20.0b1-py3.8.egg/ase/calculators/calculator.py", line 738, in get_property
    self.calculate(atoms, [name], system_changes)
  File "/Users/Cas/miniconda3/lib/python3.8/site-packages/pyjulip-0.1-py3.8.egg/pyjulip.py", line 74, in calculate
ArithmeticError: Julia exception: InexactError: trunc(Int64, NaN)
Stacktrace:
 [1] trunc at ./float.jl:703 [inlined]
 [2] floor at ./float.jl:363 [inlined]
 [3] macro expansion at /Users/Cas/.julia/packages/StaticArrays/l7lu2/src/broadcast.jl:125 [inlined]
 [4] _broadcast at /Users/Cas/.julia/packages/StaticArrays/l7lu2/src/broadcast.jl:99 [inlined]
 [5] copy at /Users/Cas/.julia/packages/StaticArrays/l7lu2/src/broadcast.jl:26 [inlined]
 [6] materialize(::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Nothing,typeof(floor),Tuple{Base.RefValue{Type{Int64}},StaticArrays.SArray{Tuple{3},Float64,1,3}}}) at ./broadcast.jl:837
 [7] analyze_cell(::StaticArrays.SArray{Tuple{3,3},Float64,2,9}, ::Float64, ::Type{T} where T) at /Users/Cas/.julia/packages/NeighbourLists/hb4fp/src/cell_list.jl:84
 [8] _celllist_(::Array{StaticArrays.SArray{Tuple{3},Float64,1,3},1}, ::StaticArrays.SArray{Tuple{3,3},Float64,2,9}, ::StaticArrays.SArray{Tuple{3},Bool,1,3}, ::Float64, ::Type{T} where T) at /Users/Cas/.julia/packages/NeighbourLists/hb4fp/src/cell_list.jl:107
 [9] _pairlist_(::Array{StaticArrays.SArray{Tuple{3},Float64,1,3},1}, ::StaticArrays.SArray{Tuple{3,3},Float64,2,9}, ::StaticArrays.SArray{Tuple{3},Bool,1,3}, ::Float64, ::Type{T} where T, ::Bool) at /Users/Cas/.julia/packages/NeighbourLists/hb4fp/src/cell_list.jl:294
 [10] #PairList#1 at /Users/Cas/.julia/packages/NeighbourLists/hb4fp/src/cell_list.jl:6 [inlined]
 [11] neighbourlist(::Atoms{Float64}, ::Float64; recompute::Bool, key::String, storelist::Bool, int_type::Type{T} where T, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /Users/Cas/.julia/packages/JuLIP/MiEQI/src/atoms.jl:198
 [12] neighbourlist at /Users/Cas/.julia/packages/JuLIP/MiEQI/src/atoms.jl:188 [inlined]
 [13] alloc_temp_d(::ACE.PairPotentials.RepulsiveCore{Float64,PolyPairPot{Float64,ACE.OrthPolys.TransformedPolys{Float64,PolyTransform{Int64,Float64},ACE.OrthPolys.OrthPolyBasis{Float64}},1},1}, ::Atoms{Float64}) at /Users/Cas/.julia/packages/JuLIP/MiEQI/src/Potentials.jl:180
 [14] #virial#8 at /Users/Cas/.julia/packages/JuLIP/MiEQI/src/Potentials.jl:197 [inlined]
 [15] virial at /Users/Cas/.julia/packages/JuLIP/MiEQI/src/Potentials.jl:197 [inlined]
 [16] (::JuLIP.MLIPs.var"#30#31"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},Atoms{Float64}})(::ACE.PairPotentials.RepulsiveCore{Float64,PolyPairPot{Float64,ACE.OrthPolys.TransformedPolys{Float64,PolyTransform{Int64,Float64},ACE.OrthPolys.OrthPolyBasis{Float64}},1},1}) at ./none:0
 [17] MappingRF at ./reduce.jl:93 [inlined]
 [18] _foldl_impl(::Base.MappingRF{JuLIP.MLIPs.var"#30#31"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},Atoms{Float64}},Base.BottomRF{typeof(Base.add_sum)}}, ::Base._InitialValue, ::Array{AbstractCalculator,1}) at ./reduce.jl:62
 [19] foldl_impl at ./reduce.jl:48 [inlined]
 [20] mapfoldl_impl at ./reduce.jl:44 [inlined]
 [21] #mapfoldl#204 at ./reduce.jl:160 [inlined]
 [22] mapfoldl at ./reduce.jl:160 [inlined]
 [23] #mapreduce#208 at ./reduce.jl:287 [inlined]
 [24] mapreduce at ./reduce.jl:287 [inlined]
 [25] sum at ./reduce.jl:494 [inlined]
 [26] sum at ./reduce.jl:511 [inlined]
 [27] #virial#29 at /Users/Cas/.julia/packages/JuLIP/MiEQI/src/mlips.jl:174 [inlined]
 [28] virial at /Users/Cas/.julia/packages/JuLIP/MiEQI/src/mlips.jl:174 [inlined]
 [29] stress(::JuLIP.MLIPs.SumIP{AbstractCalculator}, ::Atoms{Float64}) at /Users/Cas/.julia/packages/JuLIP/MiEQI/src/abstractions.jl:343
 [30] invokelatest(::Any, ::Any, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./essentials.jl:710
 [31] invokelatest(::Any, ::Any, ::Vararg{Any,N} where N) at ./essentials.jl:709
 [32] _pyjlwrap_call(::Function, ::Ptr{PyCall.PyObject_struct}, ::Ptr{PyCall.PyObject_struct}) at /Users/Cas/.julia/packages/PyCall/zqDXB/src/callback.jl:28
 [33] pyjlwrap_call(::Ptr{PyCall.PyObject_struct}, ::Ptr{PyCall.PyObject_struct}, ::Ptr{PyCall.PyObject_struct}) at /Users/Cas/.julia/packages/PyCall/zqDXB/src/callback.jl:49
